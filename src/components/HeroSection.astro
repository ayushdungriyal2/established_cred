---
import Container from "./Container.astro";
---

<div
  class="relative pb-32 flex justify-center align-middle overflow-hidden font-sans bg-[#0a020e]"
  id="home"
>
  {/* Subtle center flare - adjusted for mobile */}
  <div class="absolute inset-0">
    <div class="absolute inset-0 max-w-4xl mx-auto">
      <div
        class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[100vw] md:w-[800px] h-[300px] md:h-[500px] bg-[#8A74FF]/10 blur-[100px] rounded-full"
      >
      </div>
    </div>
  </div>

  <div class="relative w-full">
    <Container>
      <div class="relative pt-20 sm:pt-28 md:pt-32 lg:pt-40">
        <div
          class="text-center mx-auto px-4 sm:px-6 lg:px-8 max-w-[90%] sm:max-w-[85%] lg:max-w-[80%] xl:max-w-[1100px]"
        >
          {/* Badge */}
          <div
            class="inline-flex items-center gap-2 px-3 sm:px-4 py-1.5 sm:py-2 rounded-full bg-white/5 border border-white/[0.08] mb-4 sm:mb-6"
          >
            <span
              class="inline-block w-1.5 sm:w-2 h-1.5 sm:h-2 rounded-full bg-[#8A74FF] animate-pulse"
            ></span>
            <span class="text-xs sm:text-sm text-white/70 whitespace-nowrap"
              >Strategic Media Relations Partner</span
            >
          </div>

          {/* Main Heading */}
          <h1
            class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold mb-4 sm:mb-6 max-w-[100%] mx-auto leading-tight"
          >
            <span class="text-white/90"
              >Guaranteed Coverage On Top-Tier <br
                class="hidden sm:block"
              />Media for More
            </span>
            <span class="text-[#8A74FF] inline-block" id="typed-word"></span>
          </h1>

          {/* Subtitle */}
          <p
            class="text-sm sm:text-base md:text-lg text-white/50 mb-6 sm:mb-8 md:mb-10 max-w-[100%] sm:max-w-xl md:max-w-2xl mx-auto"
          >
            Strategic media placements that elevate your brand's presence and
            authority
          </p>

          {/* CTA Button */}
          <div class="flex justify-center mb-8 sm:mb-10 md:mb-12 lg:mb-16">
            <button
              class="w-full sm:w-auto bg-white/[0.05] hover:bg-white/[0.08] border border-white/[0.08] transition-all px-4 sm:px-6 md:px-8 py-2 sm:py-2.5 md:py-3 rounded-lg font-medium text-sm md:text-base text-white mx-4 sm:mx-0"
            >
              Get Your PR Strategy
            </button>
          </div>

          {/* Social Proof Section */}
        {/* Social Proof Section */}
<div class="flex flex-col sm:flex-row justify-center items-center gap-4 sm:gap-6 md:gap-8 px-4 sm:px-0">
    <div class="flex items-center gap-3">
      <span class="text-white/50 text-sm">Featured In: Forbes, INC, Entrepreneur ..</span>

      <span class="text-white/70 text-sm font-medium"></span>
    </div>
  
    <div class="hidden sm:block h-6 w-px bg-white/[0.08]"></div>
  
    <div class="flex items-center gap-2">
      <div class="flex text-[#8A74FF] text-sm sm:text-base">⭐⭐⭐⭐⭐</div>
      <span class="text-white/50 text-xs sm:text-sm">5.0 Rating</span>
    </div>
  
    <div class="hidden sm:block h-6 w-px bg-white/[0.08]"></div>
  
    <div class="flex items-center gap-1">
      <span class="text-white/90 font-semibold text-sm sm:text-base">100M+</span>
      <span class="text-white/50 text-xs sm:text-sm">Total Reach</span>
    </div>
  </div>
        </div>
      </div>
    </Container>
  </div>

  <style>
    .cursor {
      animation: blink 0.7s infinite;
    }

    @keyframes blink {
      0%,
      100% {
        opacity: 1;
      }
      50% {
        opacity: 0;
      }
    }
  </style>
</div>

{
  /* Stats Section with responsive overlap - using Tailwind's default breakpoints */
}
<div class="relative -mt-24 z-10">
  <Container>
    <div
      class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 md:gap-4 px-4 sm:px-6 lg:px-8 xl:px-0"
    >
      {/* Large Brand Authority Card */}
      <div
        class="group bg-white rounded-xl p-3 sm:p-4 md:p-5 border border-slate-300 shadow-lg col-span-1 md:col-span-2 w-full"
      >
        <div class="space-y-3 md:space-y-4">
          <div
            class="flex flex-col md:flex-row items-start md:items-center justify-between"
          >
            <div>
              <h3 class="text-base md:text-lg font-medium text-slate-800">
                Brand Authority Uplift
              </h3>
              <p class="text-xs md:text-sm text-slate-500">
                Overall Brand Growth
              </p>
            </div>
          </div>

          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3">
            {/* Organic Traffic */}
            <div class="bg-slate-50 rounded-xl p-3 w-full">
              <div class="flex items-center gap-2 mb-2">
                <svg
                  class="w-4 h-4 text-[#8A74FF]"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                </svg>
                <span class="text-sm text-slate-600">Organic Traffic</span>
              </div>
              <div class="text-xl md:text-2xl font-bold text-slate-800 mb-1">
                +165%
              </div>
              <div class="text-xs text-slate-500">
                Growth in search engine traffic
              </div>
            </div>

            {/* Referral Traffic */}
            <div class="bg-slate-50 rounded-xl p-3 w-full">
              <div class="flex items-center gap-2 mb-2">
                <svg
                  class="w-4 h-4 text-[#8A74FF]"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                </svg>
                <span class="text-sm text-slate-600">Referral Traffic</span>
              </div>
              <div class="text-xl md:text-2xl font-bold text-slate-800 mb-1">
                +156%
              </div>
              <div class="text-xs text-slate-500">Media placement visitors</div>
            </div>

            {/* Brand Searches */}
            <div class="bg-slate-50 rounded-xl p-3 w-full">
              <div class="flex items-center gap-2 mb-2">
                <svg
                  class="w-4 h-4 text-[#8A74FF]"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path d="M21 21l-6-6m2-5a7 0 11-14 0 7 0 0114 0z"></path>
                </svg>
                <span class="text-sm text-slate-600">Brand Searches</span>
              </div>
              <div class="text-xl md:text-2xl font-bold text-slate-800 mb-1">
                +178%
              </div>
              <div class="text-xs text-slate-500">Brand query growth</div>
            </div>
          </div>

          {/* Publications Performance */}
          <div class="bg-slate-50 rounded-xl p-3 md:p-4 w-full">
            <div
              class="flex flex-col md:flex-row items-start md:items-center justify-between mb-3"
            >
              <h4 class="text-sm md:text-base font-medium text-slate-700">
                Top Publications Performance
              </h4>
            </div>
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2">
              {
                [
                  { name: "TechCrunch", reach: "14M" },
                  { name: "Forbes", reach: "202.5M" },
                  { name: "Reuters", reach: "2.1M" },
                  { name: "VentureBeat", reach: "1.96M" },
                  { name: "FastCompany", reach: "7M" },
                  { name: "USAToday", reach: "171M" },
                ].map((pub) => (
                  <div class="flex items-center justify-between bg-white rounded-lg p-2 w-full">
                    <span class="text-xs font-medium text-slate-700">
                      {pub.name}
                    </span>
                    <span class="text-xs font-semibold text-[#8A74FF]">
                      {pub.reach}
                    </span>
                  </div>
                ))
              }
            </div>
          </div>
        </div>
      </div>

      {/* Campaign Performance Card */}
      <div
        class="bg-white rounded-xl p-3 sm:p-4 md:p-5 border border-slate-300 shadow-lg w-full"
      >
        <div class="flex justify-between items-center mb-4">
          <h3 class="text-base md:text-lg font-medium text-slate-800">
            Campaign Performance
          </h3>
        </div>
        <div class="flex-1 flex flex-col space-y-3">
          {
            [
              { label: "Product Launch", reached: "4.2M", target: "5M" },
              { label: "Funding News", reached: "3.8M", target: "4.5M" },
              { label: "Industry Report", reached: "2.1M", target: "3M" },
              { label: "Thought Leadership", reached: "1.8M", target: "2.5M" },
              { label: "Partnership PR", reached: "1.2M", target: "2M" },
            ].map((campaign) => (
              <div class="relative w-full">
                <div class="flex justify-between text-sm mb-1">
                  <span class="text-slate-600">{campaign.label}</span>
                </div>
                <div class="flex justify-between text-xs mb-1.5">
                  <span class="text-slate-500">Target: {campaign.target}</span>
                  <span class="font-medium text-[#8A74FF]">
                    {campaign.reached} reached
                  </span>
                </div>
                <div class="w-full bg-slate-100 rounded-full h-2">
                  <div
                    class="bg-[#8A74FF] h-2 rounded-full"
                    style={`width: ${
                      (parseFloat(campaign.reached.replace("M", "")) /
                        parseFloat(campaign.target.replace("M", ""))) *
                      100
                    }%`}
                  ></div>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>

    {/* Bottom Impact Card */}
    <div class="mt-3 sm:mt-4 px-4 sm:px-6 lg:px-8 xl:px-0">
      <div
        class="bg-white rounded-xl p-3 sm:p-4 md:p-5 border border-slate-300 shadow-lg w-full"
      >
        <div
          class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6"
        >
          <div>
            <h3 class="text-base md:text-lg font-medium text-slate-800">
              Cross-Channel Impact
            </h3>
            <p class="text-xs md:text-sm text-slate-500">
              PR Performance Metrics
            </p>
          </div>
        </div>

        <div
          class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-3 sm:gap-4 pb-3"
        >
          {
            [
              {
                label: "Channel Growth",
                value: "+172%",
                icon: `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
        </svg>`,
              },
              {
                label: "Earned Media Traffic",
                value: "+185%",
                icon: `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
        </svg>`,
              },
              {
                label: "Media CTR",
                value: "+174%",
                icon: `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path d="M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5"></path>
        </svg>`,
              },
              {
                label: "Brand Mentions",
                value: "+170%",
                icon: `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z"></path>
        </svg>`,
              },
              {
                label: "Coverage Reach",
                value: "14.2M",
                icon: `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"></path>
        </svg>`,
              },
              // ... other items remain the same
            ].map((item) => (
              <div class="bg-slate-50 rounded-lg p-3 flex flex-col items-center text-center h-full justify-between w-full">
                <div class="text-[#8A74FF] mb-3" set:html={item.icon} />
                <div class="space-y-1 flex flex-col justify-center flex-1">
                  <div class="text-xs text-slate-600">{item.label}</div>
                  <div class="flex flex-col items-center gap-1">
                    <span class="text-lg font-semibold text-slate-800">
                      {item.value}
                    </span>
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </Container>
</div>

{/* Typing animation script */}
<script>
  const words = [
    "Authority",
    "Conversions",
    "Visibility",
    "Trust",
    "Thought Leadership",
  ];
  const typedWord = document.getElementById("typed-word");
  let wordIndex = 0;
  let charIndex = 0;
  let isDeleting = false;

  function type() {
    const currentWord = words[wordIndex];

    if (isDeleting) {
      typedWord.textContent = currentWord.substring(0, charIndex - 1);
      charIndex--;
    } else {
      typedWord.textContent = currentWord.substring(0, charIndex + 1);
      charIndex++;
    }

    if (!isDeleting && charIndex === currentWord.length) {
      setTimeout(() => (isDeleting = true), 1000);
    } else if (isDeleting && charIndex === 0) {
      isDeleting = false;
      wordIndex = (wordIndex + 1) % words.length;
    }

    const typingSpeed = isDeleting ? 50 : 100;
    setTimeout(type, typingSpeed);
  }

  document.addEventListener("DOMContentLoaded", type);
</script>
